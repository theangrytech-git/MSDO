name: msdo-secret-scanning 

on:
  workflow_call:
    secrets:
      GH_TOKEN:
        required: false
  workflow_dispatch:

jobs:
  secret-scan:
    name: MSDO Secret Scan
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write
      actions: read
      security-events: write

    steps:
      - name: Checkout repository manually
        run: |
          git clone https://github.com/${{ github.repository }} .
          git checkout ${{ github.ref_name }}

      - name: Inject .gdnsettings to support secrets detection in Terraform, Bicep, ARM, Python, and YAML
        run: |
          mkdir -p .gdn
          cat <<EOF > .gdn/.gdnsettings
          {
            "version": "1.0",
            "fileFiltering": {
              "filePathIncludes": [
                "**/*.tf",
                "**/*.tfvars",
                "**/*.bicep",
                "**/*.json",
                "**/*template*.json",
                "**/*.py",
                "**/*.yml",
                "**/*.yaml"
              ],
              "fileNameExcludes": [],
              "filePathExcludes": []
            },
            "toolConfigurations": {
              "credscan": {
                "enabled": true,
                "parameters": {
                  "scanUnknownExtensions": true,
                  "severity": "low"
                }
              }
            },
            "break": {
              "policies": [
                {
                  "tool": "credscan",
                  "minimumSeverity": "low"
                }
              ]
            }
          }
          EOF

      - name: Set tool to only run secret scan
        run: echo "TOOLS=credscan" >> $GITHUB_ENV

      - name: Install .NET 6 SDK (for CredScan)
        run: |
          wget https://dot.net/v1/dotnet-install.sh -O dotnet-install.sh
          chmod +x dotnet-install.sh
          ./dotnet-install.sh --version 6.0.415 --install-dir "$HOME/dotnet"

          echo "DOTNET_ROOT=$HOME/dotnet" >> $GITHUB_ENV
          echo "$HOME/dotnet" >> $GITHUB_PATH

      - name: Run Microsoft Security DevOps - Secret Scan
        uses: theangrytech-git/security-devops-action@main
        id: msdo
        with:
          tools: ${{ env.TOOLS }}

      - name: Upload SARIF to GitHub Code Scanning
        if: github.repository_visibility == 'public'
        run: |
          echo "Compressing and uploading SARIF..."
          sarif_file="${{ steps.msdo.outputs.sarifFile }}"
          if [ ! -f "$sarif_file" ]; then
            echo "SARIF file not found at $sarif_file"
            exit 0
          fi

          gzip -c "$sarif_file" | base64 -w 0 > msdo.sarif.base64
          encoded_sarif=$(cat msdo.sarif.base64)

          curl -s -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            -H "Content-Type: application/json" \
            https://api.github.com/repos/${{ github.repository }}/code-scanning/sarifs \
            -d @- <<EOF
          {
          "commit_sha": "${{ github.sha }}",
          "ref": "${{ github.ref }}",
          "sarif": "$encoded_sarif",
          "checkout_uri": "https://github.com/${{ github.repository }}",
          "tool_name": "MSDO-CredScan"
          }
          EOF

      # - name: Alert to Microsoft Teams on secret detection
      #   if: github.repository_visibility == 'public'
      #   run: |
      #     echo "Checking for CredScan findings in SARIF..."
      #     gzip -cd msdo.sarif.base64 | base64 -d > decoded.sarif || true
      #     findings=$(jq '.runs[].results | length' decoded.sarif 2>/dev/null || echo 0)

      #     if [ "$findings" -gt 0 ]; then
      #       echo "\uD83D\uDEA8 Secrets detected: $findings"
      #       curl -H 'Content-Type: application/json' -d '{
      #         "title": "\u26A0\uFE0F MSDO CredScan Alert",
      #         "text": "**Secrets detected in '${{ github.repository }}' on branch '${{ github.ref_name }}'**\nTotal findings: '"$findings"'"
      #       }' ${{ secrets.TEAMS_WEBHOOK_URL }}
      #     else
      #       echo "\u2705 No secrets found."
      #     fi
